{"queries":[{"id":"start_year","compiledQueryString":"SELECT\n    DISTINCT year,\n    year::VARCHAR as year_str\nFROM\n    regions\nWHERE year IS NOT NULL\nORDER BY year","inputQueryString":"SELECT\n    DISTINCT year,\n    year::VARCHAR as year_str\nFROM\n    regions\nWHERE year IS NOT NULL\nORDER BY year","compiled":false,"inline":true},{"id":"end_year","compiledQueryString":"SELECT\n    *\nFROM\n    (SELECT\n    DISTINCT year,\n    year::VARCHAR as year_str\nFROM\n    regions\nWHERE year IS NOT NULL\nORDER BY year)\nWHERE\n    year >= CAST(${inputs.start_date.value} AS INT)","inputQueryString":"SELECT\n    *\nFROM\n    ${start_year}\nWHERE\n    year >= CAST(${inputs.start_date.value} AS INT)","compiled":true,"inline":true},{"id":"category","compiledQueryString":"SELECT\n  *\nFROM\n  (SELECT \n    'market_cap' as metric, 'Perception' as category,  'usd' as unit, 2 as \"order\"\n  UNION ALL\n  SELECT 'intrinsic_value', 'Performance', 'usd', 1\n  UNION ALL\n  SELECT 'tsr', 'Pay off', 'pct', 3)\nORDER BY \"order\"","inputQueryString":"SELECT\n  *\nFROM\n  (SELECT \n    'market_cap' as metric, 'Perception' as category,  'usd' as unit, 2 as \"order\"\n  UNION ALL\n  SELECT 'intrinsic_value', 'Performance', 'usd', 1\n  UNION ALL\n  SELECT 'tsr', 'Pay off', 'pct', 3)\nORDER BY \"order\"","compiled":false,"inline":true},{"id":"pay_offs","compiledQueryString":"SELECT\n  *\nFROM\n  (SELECT \n    'tsr' as metric, 'Total shareholder return' as metric_name, 1 as \"order\"\n  UNION ALL\n  SELECT 'discount_or_premium', 'Discount/Premium', 2)\nORDER BY \"order\"","inputQueryString":"SELECT\n  *\nFROM\n  (SELECT \n    'tsr' as metric, 'Total shareholder return' as metric_name, 1 as \"order\"\n  UNION ALL\n  SELECT 'discount_or_premium', 'Discount/Premium', 2)\nORDER BY \"order\"","compiled":false,"inline":true},{"id":"sectors","compiledQueryString":"SELECT\n    DISTINCT sector\nFROM\n    regions\nWHERE sector IS NOT NULL","inputQueryString":"SELECT\n    DISTINCT sector\nFROM\n    regions\nWHERE sector IS NOT NULL","compiled":false,"inline":true},{"id":"sector_by_year","compiledQueryString":"WITH yearly_metrics AS (\n    SELECT\n        year,\n        region,\n        sector,\n        avg(market_cap) as 'Market capitalization',\n        avg(intrinsic_value) as 'Intrinsic value',\n        avg(tsr) as yearly_tsr,\n        (avg(market_cap) - avg(intrinsic_value))/ avg(intrinsic_value) as discount_or_premium\n    FROM\n        regions\n    WHERE\n        region = '${params.region}'\n        AND sector IN ${inputs.sector_multi.value}\n        AND year between ${inputs.start_date.value}::INT and ${inputs.end_date.value}::INT\n    GROUP BY ALL\n),\ncompound_tsr AS (\n    SELECT\n        *,\n        EXP(SUM(LN(1 + yearly_tsr)) OVER (\n            PARTITION BY sector\n            ORDER BY year\n        )) - 1 as cumulative_tsr\n    FROM yearly_metrics\n)\nSELECT\n    year,\n    region,\n    sector,\n    \"Market capitalization\",\n    \"Intrinsic value\",\n    discount_or_premium,\n    yearly_tsr,\n    cumulative_tsr\nFROM\n    compound_tsr\nORDER BY\n    sector,\n    year","inputQueryString":"WITH yearly_metrics AS (\n    SELECT\n        year,\n        region,\n        sector,\n        avg(market_cap) as 'Market capitalization',\n        avg(intrinsic_value) as 'Intrinsic value',\n        avg(tsr) as yearly_tsr,\n        (avg(market_cap) - avg(intrinsic_value))/ avg(intrinsic_value) as discount_or_premium\n    FROM\n        regions\n    WHERE\n        region = '${params.region}'\n        AND sector IN ${inputs.sector_multi.value}\n        AND year between ${inputs.start_date.value}::INT and ${inputs.end_date.value}::INT\n    GROUP BY ALL\n),\ncompound_tsr AS (\n    SELECT\n        *,\n        EXP(SUM(LN(1 + yearly_tsr)) OVER (\n            PARTITION BY sector\n            ORDER BY year\n        )) - 1 as cumulative_tsr\n    FROM yearly_metrics\n)\nSELECT\n    year,\n    region,\n    sector,\n    \"Market capitalization\",\n    \"Intrinsic value\",\n    discount_or_premium,\n    yearly_tsr,\n    cumulative_tsr\nFROM\n    compound_tsr\nORDER BY\n    sector,\n    year","compiled":false,"inline":true},{"id":"output","compiledQueryString":"WITH yearly_market_cap AS (\n    SELECT \n        sector,\n        MAKE_DATE(year::INT, 1, 1) AS year_date,  -- converting numeric year to date\n        AVG(\"Market capitalization\") AS yearly_market_cap,\n        AVG(\"Intrinsic value\") AS yearly_iv,\n        AVG(\"discount_or_premium\") AS yearly_dp,\n        AVG(\"cumulative_tsr\") AS yearly_tsr,\n    FROM \n        (WITH yearly_metrics AS (\n    SELECT\n        year,\n        region,\n        sector,\n        avg(market_cap) as 'Market capitalization',\n        avg(intrinsic_value) as 'Intrinsic value',\n        avg(tsr) as yearly_tsr,\n        (avg(market_cap) - avg(intrinsic_value))/ avg(intrinsic_value) as discount_or_premium\n    FROM\n        regions\n    WHERE\n        region = '${params.region}'\n        AND sector IN ${inputs.sector_multi.value}\n        AND year between ${inputs.start_date.value}::INT and ${inputs.end_date.value}::INT\n    GROUP BY ALL\n),\ncompound_tsr AS (\n    SELECT\n        *,\n        EXP(SUM(LN(1 + yearly_tsr)) OVER (\n            PARTITION BY sector\n            ORDER BY year\n        )) - 1 as cumulative_tsr\n    FROM yearly_metrics\n)\nSELECT\n    year,\n    region,\n    sector,\n    \"Market capitalization\",\n    \"Intrinsic value\",\n    discount_or_premium,\n    yearly_tsr,\n    cumulative_tsr\nFROM\n    compound_tsr\nORDER BY\n    sector,\n    year)\n    GROUP BY \n        sector, year\n    ORDER BY year_date desc, yearly_market_cap desc\n)\nSELECT \n    sector,\n    sum(yearly_market_cap) as total_market_cap,\n    ARRAY_AGG({'year': year_date, 'market_cap': yearly_market_cap}) AS market_cap_data,\n    ARRAY_AGG({'year': year_date, 'iv': yearly_iv}) AS iv_data,\n    ARRAY_AGG({'year': year_date, 'dp': yearly_dp}) AS dp_data,\n    ARRAY_AGG({'year': year_date, 'tsr': yearly_tsr}) AS tsr_data\nFROM \n    yearly_market_cap\nGROUP BY \n    sector","inputQueryString":"WITH yearly_market_cap AS (\n    SELECT \n        sector,\n        MAKE_DATE(year::INT, 1, 1) AS year_date,  -- converting numeric year to date\n        AVG(\"Market capitalization\") AS yearly_market_cap,\n        AVG(\"Intrinsic value\") AS yearly_iv,\n        AVG(\"discount_or_premium\") AS yearly_dp,\n        AVG(\"cumulative_tsr\") AS yearly_tsr,\n    FROM \n        ${sector_by_year}\n    GROUP BY \n        sector, year\n    ORDER BY year_date desc, yearly_market_cap desc\n)\nSELECT \n    sector,\n    sum(yearly_market_cap) as total_market_cap,\n    ARRAY_AGG({'year': year_date, 'market_cap': yearly_market_cap}) AS market_cap_data,\n    ARRAY_AGG({'year': year_date, 'iv': yearly_iv}) AS iv_data,\n    ARRAY_AGG({'year': year_date, 'dp': yearly_dp}) AS dp_data,\n    ARRAY_AGG({'year': year_date, 'tsr': yearly_tsr}) AS tsr_data\nFROM \n    yearly_market_cap\nGROUP BY \n    sector","compiled":true,"inline":true}]}